{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "78f1071b",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:46.558448Z",
     "iopub.status.busy": "2024-07-05T10:20:46.557982Z",
     "iopub.status.idle": "2024-07-05T10:20:47.329547Z",
     "shell.execute_reply": "2024-07-05T10:20:47.328643Z"
    },
    "papermill": {
     "duration": 0.784091,
     "end_time": "2024-07-05T10:20:47.332066",
     "exception": false,
     "start_time": "2024-07-05T10:20:46.547975",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5480b484",
   "metadata": {
    "papermill": {
     "duration": 0.007191,
     "end_time": "2024-07-05T10:20:47.347093",
     "exception": false,
     "start_time": "2024-07-05T10:20:47.339902",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Clustering \n",
    "it is the process of grouping objects from a dataset such that objects in the same group are more similar to eachother than to those in other groups.\n",
    "In the problem of clustering, we are given a dataset comprised only of input features without\n",
    "labels. We wish to assign to each data point a discrete label indicating which “cluster” it belongs\n",
    "to, in such a way that the resulting cluster assignment “fits” the data. We are given flexibility to\n",
    "choose our notion of goodness of fit for cluster assignments.\n",
    "\n",
    "here are some real world applications:\n",
    "* customer segmentation\n",
    "* feature engineerimg\n",
    "* fraud/anomaly detection "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3536226",
   "metadata": {
    "papermill": {
     "duration": 0.007207,
     "end_time": "2024-07-05T10:20:47.361751",
     "exception": false,
     "start_time": "2024-07-05T10:20:47.354544",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "let's use the iris flower dataset to study some of the clustering algorithms"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "98bf9788",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:47.378427Z",
     "iopub.status.busy": "2024-07-05T10:20:47.377976Z",
     "iopub.status.idle": "2024-07-05T10:20:48.580782Z",
     "shell.execute_reply": "2024-07-05T10:20:48.579785Z"
    },
    "papermill": {
     "duration": 1.214061,
     "end_time": "2024-07-05T10:20:48.583332",
     "exception": false,
     "start_time": "2024-07-05T10:20:47.369271",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "sns.set_style('darkgrid')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "77a00d90",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:48.600353Z",
     "iopub.status.busy": "2024-07-05T10:20:48.599505Z",
     "iopub.status.idle": "2024-07-05T10:20:49.236354Z",
     "shell.execute_reply": "2024-07-05T10:20:49.235295Z"
    },
    "papermill": {
     "duration": 0.647589,
     "end_time": "2024-07-05T10:20:49.238672",
     "exception": false,
     "start_time": "2024-07-05T10:20:48.591083",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sepal_length</th>\n",
       "      <th>sepal_width</th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "      <th>species</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "      <td>setosa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>6.7</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>2.3</td>\n",
       "      <td>virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>6.3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.9</td>\n",
       "      <td>virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>2.0</td>\n",
       "      <td>virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>6.2</td>\n",
       "      <td>3.4</td>\n",
       "      <td>5.4</td>\n",
       "      <td>2.3</td>\n",
       "      <td>virginica</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>5.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>1.8</td>\n",
       "      <td>virginica</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>150 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     sepal_length  sepal_width  petal_length  petal_width    species\n",
       "0             5.1          3.5           1.4          0.2     setosa\n",
       "1             4.9          3.0           1.4          0.2     setosa\n",
       "2             4.7          3.2           1.3          0.2     setosa\n",
       "3             4.6          3.1           1.5          0.2     setosa\n",
       "4             5.0          3.6           1.4          0.2     setosa\n",
       "..            ...          ...           ...          ...        ...\n",
       "145           6.7          3.0           5.2          2.3  virginica\n",
       "146           6.3          2.5           5.0          1.9  virginica\n",
       "147           6.5          3.0           5.2          2.0  virginica\n",
       "148           6.2          3.4           5.4          2.3  virginica\n",
       "149           5.9          3.0           5.1          1.8  virginica\n",
       "\n",
       "[150 rows x 5 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "iris_df=sns.load_dataset('iris')\n",
    "iris_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "d41b3d77",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:49.255955Z",
     "iopub.status.busy": "2024-07-05T10:20:49.255569Z",
     "iopub.status.idle": "2024-07-05T10:20:49.828109Z",
     "shell.execute_reply": "2024-07-05T10:20:49.827132Z"
    },
    "papermill": {
     "duration": 0.583898,
     "end_time": "2024-07-05T10:20:49.830535",
     "exception": false,
     "start_time": "2024-07-05T10:20:49.246637",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: xlabel='sepal_length', ylabel='petal_length'>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data=iris_df,x='sepal_length',y='petal_length',hue='species')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2e1ee9e",
   "metadata": {
    "papermill": {
     "duration": 0.008141,
     "end_time": "2024-07-05T10:20:49.847304",
     "exception": false,
     "start_time": "2024-07-05T10:20:49.839163",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**we going to cluster the flowers of similar species.. so we going to pretend this as an unlabelled data set...**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "25ca33b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:49.865986Z",
     "iopub.status.busy": "2024-07-05T10:20:49.865104Z",
     "iopub.status.idle": "2024-07-05T10:20:49.882375Z",
     "shell.execute_reply": "2024-07-05T10:20:49.881408Z"
    },
    "papermill": {
     "duration": 0.028911,
     "end_time": "2024-07-05T10:20:49.884571",
     "exception": false,
     "start_time": "2024-07-05T10:20:49.855660",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sepal_length</th>\n",
       "      <th>sepal_width</th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>6.7</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>2.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>6.3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>6.2</td>\n",
       "      <td>3.4</td>\n",
       "      <td>5.4</td>\n",
       "      <td>2.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>5.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>1.8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>150 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     sepal_length  sepal_width  petal_length  petal_width\n",
       "0             5.1          3.5           1.4          0.2\n",
       "1             4.9          3.0           1.4          0.2\n",
       "2             4.7          3.2           1.3          0.2\n",
       "3             4.6          3.1           1.5          0.2\n",
       "4             5.0          3.6           1.4          0.2\n",
       "..            ...          ...           ...          ...\n",
       "145           6.7          3.0           5.2          2.3\n",
       "146           6.3          2.5           5.0          1.9\n",
       "147           6.5          3.0           5.2          2.0\n",
       "148           6.2          3.4           5.4          2.3\n",
       "149           5.9          3.0           5.1          1.8\n",
       "\n",
       "[150 rows x 4 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x=iris_df.drop(columns=('species'))\n",
    "x"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "28800067",
   "metadata": {
    "papermill": {
     "duration": 0.00869,
     "end_time": "2024-07-05T10:20:49.902037",
     "exception": false,
     "start_time": "2024-07-05T10:20:49.893347",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# K Means clustering \n",
    "this algorithm attempts to classify objects into pre-determined nnumber of clusters by finding optimal central points(called centroids)for each cluster.\n",
    "\n",
    "here's how K-means algo works:\n",
    "* pick K random objects as the initial cluster centers\n",
    "* classify each object into the cluster whose center is closest to the point\n",
    "* for each cluster of classified objects,compute the centroid(mean)\n",
    "* now reclassify each object using the centroids as cluster centers\n",
    "* calculate the total variance of the clusters\n",
    "* repeating all the steps a few more times and picking the cluster with the lowest variance\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "88b0ad81",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:49.921722Z",
     "iopub.status.busy": "2024-07-05T10:20:49.920811Z",
     "iopub.status.idle": "2024-07-05T10:20:50.420115Z",
     "shell.execute_reply": "2024-07-05T10:20:50.418895Z"
    },
    "papermill": {
     "duration": 0.511126,
     "end_time": "2024-07-05T10:20:50.422134",
     "exception": false,
     "start_time": "2024-07-05T10:20:49.911008",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KMeans(n_clusters=6, random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KMeans</label><div class=\"sk-toggleable__content\"><pre>KMeans(n_clusters=6, random_state=42)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "KMeans(n_clusters=6, random_state=42)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "model = KMeans(n_clusters=6,random_state=42)\n",
    "model.fit(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b4713d7b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:50.443066Z",
     "iopub.status.busy": "2024-07-05T10:20:50.442136Z",
     "iopub.status.idle": "2024-07-05T10:20:50.449321Z",
     "shell.execute_reply": "2024-07-05T10:20:50.448342Z"
    },
    "papermill": {
     "duration": 0.019813,
     "end_time": "2024-07-05T10:20:50.451466",
     "exception": false,
     "start_time": "2024-07-05T10:20:50.431653",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[7.475     , 3.125     , 6.3       , 2.05      ],\n",
       "       [4.70454545, 3.12272727, 1.41363636, 0.2       ],\n",
       "       [5.508     , 2.6       , 3.908     , 1.204     ],\n",
       "       [6.20769231, 2.85384615, 4.74615385, 1.56410256],\n",
       "       [6.52916667, 3.05833333, 5.50833333, 2.1625    ],\n",
       "       [5.24285714, 3.66785714, 1.5       , 0.28214286]])"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.cluster_centers_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "4c78e454",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:50.472683Z",
     "iopub.status.busy": "2024-07-05T10:20:50.471802Z",
     "iopub.status.idle": "2024-07-05T10:20:50.486088Z",
     "shell.execute_reply": "2024-07-05T10:20:50.485065Z"
    },
    "papermill": {
     "duration": 0.026971,
     "end_time": "2024-07-05T10:20:50.488140",
     "exception": false,
     "start_time": "2024-07-05T10:20:50.461169",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sepal_length</th>\n",
       "      <th>sepal_width</th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>6.7</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>2.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>6.3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>6.2</td>\n",
       "      <td>3.4</td>\n",
       "      <td>5.4</td>\n",
       "      <td>2.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>5.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>1.8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>150 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     sepal_length  sepal_width  petal_length  petal_width\n",
       "0             5.1          3.5           1.4          0.2\n",
       "1             4.9          3.0           1.4          0.2\n",
       "2             4.7          3.2           1.3          0.2\n",
       "3             4.6          3.1           1.5          0.2\n",
       "4             5.0          3.6           1.4          0.2\n",
       "..            ...          ...           ...          ...\n",
       "145           6.7          3.0           5.2          2.3\n",
       "146           6.3          2.5           5.0          1.9\n",
       "147           6.5          3.0           5.2          2.0\n",
       "148           6.2          3.4           5.4          2.3\n",
       "149           5.9          3.0           5.1          1.8\n",
       "\n",
       "[150 rows x 4 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "611c2b8a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:50.508862Z",
     "iopub.status.busy": "2024-07-05T10:20:50.508466Z",
     "iopub.status.idle": "2024-07-05T10:20:50.515077Z",
     "shell.execute_reply": "2024-07-05T10:20:50.514007Z"
    },
    "papermill": {
     "duration": 0.019396,
     "end_time": "2024-07-05T10:20:50.517178",
     "exception": false,
     "start_time": "2024-07-05T10:20:50.497782",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "preds=model.predict(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "471b2b31",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:50.537932Z",
     "iopub.status.busy": "2024-07-05T10:20:50.537543Z",
     "iopub.status.idle": "2024-07-05T10:20:50.544338Z",
     "shell.execute_reply": "2024-07-05T10:20:50.543420Z"
    },
    "papermill": {
     "duration": 0.019846,
     "end_time": "2024-07-05T10:20:50.546514",
     "exception": false,
     "start_time": "2024-07-05T10:20:50.526668",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([5, 1, 1, 1, 5, 5, 1, 5, 1, 1, 5, 1, 1, 1, 5, 5, 5, 5, 5, 5, 5, 5,\n",
       "       1, 5, 1, 1, 5, 5, 5, 1, 1, 5, 5, 5, 1, 1, 5, 5, 1, 5, 5, 1, 1, 5,\n",
       "       5, 1, 5, 1, 5, 1, 3, 3, 3, 2, 3, 3, 3, 2, 3, 2, 2, 3, 2, 3, 2, 3,\n",
       "       3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 3, 2, 3, 3, 3,\n",
       "       2, 2, 2, 3, 2, 2, 2, 2, 2, 3, 2, 2, 4, 3, 0, 4, 4, 0, 2, 0, 4, 0,\n",
       "       4, 4, 4, 3, 4, 4, 4, 0, 0, 3, 4, 3, 0, 3, 4, 0, 3, 3, 4, 0, 0, 0,\n",
       "       4, 3, 3, 0, 4, 4, 3, 4, 4, 4, 3, 4, 4, 4, 3, 4, 4, 3], dtype=int32)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "preds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3e85bcf6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:50.567630Z",
     "iopub.status.busy": "2024-07-05T10:20:50.566718Z",
     "iopub.status.idle": "2024-07-05T10:20:50.577594Z",
     "shell.execute_reply": "2024-07-05T10:20:50.576742Z"
    },
    "papermill": {
     "duration": 0.023391,
     "end_time": "2024-07-05T10:20:50.579629",
     "exception": false,
     "start_time": "2024-07-05T10:20:50.556238",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "count        150\n",
       "unique         3\n",
       "top       setosa\n",
       "freq          50\n",
       "Name: species, dtype: object"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "iris_df['species'].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "859a73f8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:50.601047Z",
     "iopub.status.busy": "2024-07-05T10:20:50.600177Z",
     "iopub.status.idle": "2024-07-05T10:20:51.178135Z",
     "shell.execute_reply": "2024-07-05T10:20:51.176916Z"
    },
    "papermill": {
     "duration": 0.591182,
     "end_time": "2024-07-05T10:20:51.180545",
     "exception": false,
     "start_time": "2024-07-05T10:20:50.589363",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.scatterplot(data=iris_df,x='sepal_length',y='petal_length',hue=preds);\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "be3e35f2",
   "metadata": {
    "papermill": {
     "duration": 0.01006,
     "end_time": "2024-07-05T10:20:51.201042",
     "exception": false,
     "start_time": "2024-07-05T10:20:51.190982",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "we can check the \"goodness\" of the fit by looking at the model.inertia,which contains the sum of squared distances of samples to their closest cluster centre. lower the inertia better the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0dfa57e1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:51.223720Z",
     "iopub.status.busy": "2024-07-05T10:20:51.222702Z",
     "iopub.status.idle": "2024-07-05T10:20:51.229218Z",
     "shell.execute_reply": "2024-07-05T10:20:51.228186Z"
    },
    "papermill": {
     "duration": 0.019899,
     "end_time": "2024-07-05T10:20:51.231198",
     "exception": false,
     "start_time": "2024-07-05T10:20:51.211299",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "39.03998724608725"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.inertia_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "5508eb4c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:51.253982Z",
     "iopub.status.busy": "2024-07-05T10:20:51.253596Z",
     "iopub.status.idle": "2024-07-05T10:20:52.095694Z",
     "shell.execute_reply": "2024-07-05T10:20:52.094649Z"
    },
    "papermill": {
     "duration": 0.855959,
     "end_time": "2024-07-05T10:20:52.097781",
     "exception": false,
     "start_time": "2024-07-05T10:20:51.241822",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n",
      "/opt/conda/lib/python3.10/site-packages/sklearn/cluster/_kmeans.py:870: FutureWarning: The default value of `n_init` will change from 10 to 'auto' in 1.4. Set the value of `n_init` explicitly to suppress the warning\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'inertia')"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "options=range(2,20)\n",
    "inertia=[]\n",
    "for n_clusters in options:\n",
    "    model=KMeans(n_clusters,random_state=42).fit(x)\n",
    "    inertia.append(model.inertia_)\n",
    "    \n",
    "plt.title(\"no. of clusters vs Inertia\")\n",
    "plt.plot(options,inertia,'-o')\n",
    "plt.xlabel('no. of clusters')\n",
    "plt.ylabel('inertia')\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54925b03",
   "metadata": {
    "papermill": {
     "duration": 0.012412,
     "end_time": "2024-07-05T10:20:52.123145",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.110733",
     "status": "completed"
    },
    "tags": []
   },
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "d34a862e",
   "metadata": {
    "papermill": {
     "duration": 0.011073,
     "end_time": "2024-07-05T10:20:52.145775",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.134702",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "we can pick the numbers of clusters beyond which the reduction in inertia decreases sharply"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b2bea44b",
   "metadata": {
    "papermill": {
     "duration": 0.010908,
     "end_time": "2024-07-05T10:20:52.167921",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.157013",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "**the K-Means algo can be quite slow on large datasets so we have an iterative alternative algo known as Mini-batch K-means**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b0c0ed8",
   "metadata": {
    "papermill": {
     "duration": 0.01095,
     "end_time": "2024-07-05T10:20:52.191442",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.180492",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# DBSCAN\n",
    "density-based spatial clustering of application with noise uses the density of points in region to form clusters. it has two main parameters: \"epsilon\" and \"mini samples\"using whihc we classify each point as a core point,reachable point or noise point(outlier)\n",
    "\n",
    "DBSCAN there is no prediction step because the defination of core points depends on exisitng inputs... it simply assigns labels to all existing inputs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "3762be36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:52.216284Z",
     "iopub.status.busy": "2024-07-05T10:20:52.215293Z",
     "iopub.status.idle": "2024-07-05T10:20:52.226707Z",
     "shell.execute_reply": "2024-07-05T10:20:52.225742Z"
    },
    "papermill": {
     "duration": 0.025778,
     "end_time": "2024-07-05T10:20:52.228761",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.202983",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DBSCAN(eps=1.1, min_samples=4)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">DBSCAN</label><div class=\"sk-toggleable__content\"><pre>DBSCAN(eps=1.1, min_samples=4)</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "DBSCAN(eps=1.1, min_samples=4)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.cluster import DBSCAN\n",
    "model=DBSCAN(eps=1.1,min_samples=4)\n",
    "model.fit(x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "f7b7db82",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:52.253590Z",
     "iopub.status.busy": "2024-07-05T10:20:52.252726Z",
     "iopub.status.idle": "2024-07-05T10:20:52.259790Z",
     "shell.execute_reply": "2024-07-05T10:20:52.258889Z"
    },
    "papermill": {
     "duration": 0.021559,
     "end_time": "2024-07-05T10:20:52.261810",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.240251",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['__annotations__',\n",
       " '__class__',\n",
       " '__delattr__',\n",
       " '__dict__',\n",
       " '__dir__',\n",
       " '__doc__',\n",
       " '__eq__',\n",
       " '__format__',\n",
       " '__ge__',\n",
       " '__getattribute__',\n",
       " '__getstate__',\n",
       " '__gt__',\n",
       " '__hash__',\n",
       " '__init__',\n",
       " '__init_subclass__',\n",
       " '__le__',\n",
       " '__lt__',\n",
       " '__module__',\n",
       " '__ne__',\n",
       " '__new__',\n",
       " '__reduce__',\n",
       " '__reduce_ex__',\n",
       " '__repr__',\n",
       " '__setattr__',\n",
       " '__setstate__',\n",
       " '__sizeof__',\n",
       " '__str__',\n",
       " '__subclasshook__',\n",
       " '__weakref__',\n",
       " '_check_feature_names',\n",
       " '_check_n_features',\n",
       " '_estimator_type',\n",
       " '_get_param_names',\n",
       " '_get_tags',\n",
       " '_more_tags',\n",
       " '_parameter_constraints',\n",
       " '_repr_html_',\n",
       " '_repr_html_inner',\n",
       " '_repr_mimebundle_',\n",
       " '_validate_data',\n",
       " '_validate_params',\n",
       " 'algorithm',\n",
       " 'components_',\n",
       " 'core_sample_indices_',\n",
       " 'eps',\n",
       " 'feature_names_in_',\n",
       " 'fit',\n",
       " 'fit_predict',\n",
       " 'get_params',\n",
       " 'labels_',\n",
       " 'leaf_size',\n",
       " 'metric',\n",
       " 'metric_params',\n",
       " 'min_samples',\n",
       " 'n_features_in_',\n",
       " 'n_jobs',\n",
       " 'p',\n",
       " 'set_params']"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dir(model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "dd0e6239",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:52.287300Z",
     "iopub.status.busy": "2024-07-05T10:20:52.286410Z",
     "iopub.status.idle": "2024-07-05T10:20:52.293172Z",
     "shell.execute_reply": "2024-07-05T10:20:52.292243Z"
    },
    "papermill": {
     "duration": 0.02179,
     "end_time": "2024-07-05T10:20:52.295251",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.273461",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([  0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,\n",
       "        13,  14,  15,  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,\n",
       "        26,  27,  28,  29,  30,  31,  32,  33,  34,  35,  36,  37,  38,\n",
       "        39,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  50,  51,\n",
       "        52,  53,  54,  55,  56,  57,  58,  59,  60,  61,  62,  63,  64,\n",
       "        65,  66,  67,  68,  69,  70,  71,  72,  73,  74,  75,  76,  77,\n",
       "        78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,\n",
       "        91,  92,  93,  94,  95,  96,  97,  98,  99, 100, 101, 102, 103,\n",
       "       104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,\n",
       "       117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129,\n",
       "       130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,\n",
       "       143, 144, 145, 146, 147, 148, 149])"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.core_sample_indices_"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "318b054d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:52.321003Z",
     "iopub.status.busy": "2024-07-05T10:20:52.320603Z",
     "iopub.status.idle": "2024-07-05T10:20:52.327199Z",
     "shell.execute_reply": "2024-07-05T10:20:52.326198Z"
    },
    "papermill": {
     "duration": 0.02196,
     "end_time": "2024-07-05T10:20:52.329352",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.307392",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n",
       "       0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,\n",
       "       1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.labels_"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dfe97740",
   "metadata": {
    "papermill": {
     "duration": 0.011527,
     "end_time": "2024-07-05T10:20:52.353244",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.341717",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# hierarchical clustering \n",
    "as the name suggests, creates a hierarcy or tree of clusters\n",
    "\n",
    "The most commmon approach works:\n",
    "* mark each point in the dataset as a cluster\n",
    "* pick the two closest cluster center without a parent and combine them into a new cluster.\n",
    "* the new cluster is the parent cluster of the two clusters, and its center is the mean of all the points in the cluster\n",
    "* repeat above two steps till there is just one cluster left\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "61be324b",
   "metadata": {
    "papermill": {
     "duration": 0.011546,
     "end_time": "2024-07-05T10:20:52.376566",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.365020",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "01895015",
   "metadata": {
    "papermill": {
     "duration": 0.01143,
     "end_time": "2024-07-05T10:20:52.400021",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.388591",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Dimensionality Reduction and Manifold Learning\n",
    "in ML, we often find datasets with a very large number of dimensions(features or columns). Dimensionality reduction techniques are used to reduce the numeber of dimensions or features within the data to a manageable or conveinient number \n",
    "* reducing size of data without loss of info\n",
    "* visualizing high dimension data in 2/3D\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "Manifold learning is an approach to non-linear dimensionality reduction. Algorithms for this task are based on the idea that the dimensionality of many data sets is only artificially high.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f4e5419",
   "metadata": {
    "papermill": {
     "duration": 0.011467,
     "end_time": "2024-07-05T10:20:52.423254",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.411787",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Principal component analysis\n",
    "it uses linear projections of data to reduce their dimensions,while attempting to maximize the variance of data in the projection\n",
    "\n",
    "\n",
    "Principal component analysis (PCA) was invented by Karl Pearson in 1901. It is interesting\n",
    "in that it is a technique that both creates new features, and at the same time can reduce the\n",
    "number of features (dimensionality reduction) that we use in our model. For example, one\n",
    "could have an n-dimensional dataset, having n features, and reduce the dataset all the way\n",
    "down to 1-dimension by creating a feature consisting of just the first principal component.\n",
    "However, when it comes to making predictions one still need access to all of the original\n",
    "features so as to re-create the same principal component(s) to feed into the trained model.\n",
    "So, although PCA reduces the number of dimensions, it is not to be considered a feature\n",
    "elimination technique.\n",
    "It should be mentioned that PCA has notable limitations; the feature-mixtures in the\n",
    "components created by PCA become uninterpretable------the orange book of ML"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "bcc629c2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:52.449584Z",
     "iopub.status.busy": "2024-07-05T10:20:52.449213Z",
     "iopub.status.idle": "2024-07-05T10:20:52.463612Z",
     "shell.execute_reply": "2024-07-05T10:20:52.462572Z"
    },
    "papermill": {
     "duration": 0.030269,
     "end_time": "2024-07-05T10:20:52.465769",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.435500",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>sepal_length</th>\n",
       "      <th>sepal_width</th>\n",
       "      <th>petal_length</th>\n",
       "      <th>petal_width</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>5.1</td>\n",
       "      <td>3.5</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4.7</td>\n",
       "      <td>3.2</td>\n",
       "      <td>1.3</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4.6</td>\n",
       "      <td>3.1</td>\n",
       "      <td>1.5</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5.0</td>\n",
       "      <td>3.6</td>\n",
       "      <td>1.4</td>\n",
       "      <td>0.2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>145</th>\n",
       "      <td>6.7</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>2.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>146</th>\n",
       "      <td>6.3</td>\n",
       "      <td>2.5</td>\n",
       "      <td>5.0</td>\n",
       "      <td>1.9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>147</th>\n",
       "      <td>6.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.2</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>6.2</td>\n",
       "      <td>3.4</td>\n",
       "      <td>5.4</td>\n",
       "      <td>2.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>5.9</td>\n",
       "      <td>3.0</td>\n",
       "      <td>5.1</td>\n",
       "      <td>1.8</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>150 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     sepal_length  sepal_width  petal_length  petal_width\n",
       "0             5.1          3.5           1.4          0.2\n",
       "1             4.9          3.0           1.4          0.2\n",
       "2             4.7          3.2           1.3          0.2\n",
       "3             4.6          3.1           1.5          0.2\n",
       "4             5.0          3.6           1.4          0.2\n",
       "..            ...          ...           ...          ...\n",
       "145           6.7          3.0           5.2          2.3\n",
       "146           6.3          2.5           5.0          1.9\n",
       "147           6.5          3.0           5.2          2.0\n",
       "148           6.2          3.4           5.4          2.3\n",
       "149           5.9          3.0           5.1          1.8\n",
       "\n",
       "[150 rows x 4 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "6c887629",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:52.491754Z",
     "iopub.status.busy": "2024-07-05T10:20:52.490997Z",
     "iopub.status.idle": "2024-07-05T10:20:52.495580Z",
     "shell.execute_reply": "2024-07-05T10:20:52.494627Z"
    },
    "papermill": {
     "duration": 0.019754,
     "end_time": "2024-07-05T10:20:52.497573",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.477819",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.decomposition import PCA"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "10387ae9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:52.523265Z",
     "iopub.status.busy": "2024-07-05T10:20:52.522630Z",
     "iopub.status.idle": "2024-07-05T10:20:53.013974Z",
     "shell.execute_reply": "2024-07-05T10:20:53.013031Z"
    },
    "papermill": {
     "duration": 0.506914,
     "end_time": "2024-07-05T10:20:53.016587",
     "exception": false,
     "start_time": "2024-07-05T10:20:52.509673",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Axes: >"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pca=PCA(n_components=2)\n",
    "pca.fit(x)\n",
    "transformed=pca.transform(x)\n",
    "sns.scatterplot(x=transformed[:,0],y=transformed[:,1],hue=iris_df['species'])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a8d19b9b",
   "metadata": {
    "papermill": {
     "duration": 0.012666,
     "end_time": "2024-07-05T10:20:53.042309",
     "exception": false,
     "start_time": "2024-07-05T10:20:53.029643",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# t-Distributed Stochastic Neighbor Embedding(t-SNE)\n",
    "\n",
    "t-SNE is a tool to visualize high-dimensional data. It converts similarities between data points to joint probabilities and tries to minimize the Kullback-Leibler divergence between the joint probabilities of the low-dimensional embedding and the high-dimensional data. t-SNE has a cost function that is not convex, i.e. with different initializations we can get different results.\n",
    "\n",
    "It is highly recommended to use another dimensionality reduction method (e.g. PCA for dense data or TruncatedSVD for sparse data) to reduce the number of dimensions to a reasonable amount (e.g. 50) if the number of features is very high. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "9cc973ba",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-07-05T10:20:53.070059Z",
     "iopub.status.busy": "2024-07-05T10:20:53.069171Z",
     "iopub.status.idle": "2024-07-05T10:20:54.331437Z",
     "shell.execute_reply": "2024-07-05T10:20:54.330178Z"
    },
    "papermill": {
     "duration": 1.278811,
     "end_time": "2024-07-05T10:20:54.333957",
     "exception": false,
     "start_time": "2024-07-05T10:20:53.055146",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.manifold import TSNE\n",
    "?TSNE\n",
    "tsne = TSNE(n_components=2)\n",
    "transformed = tsne.fit_transform(x)\n",
    "sns.scatterplot(x=transformed[:,0], y=transformed[:,1], hue=iris_df['species']);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2bcf987e",
   "metadata": {
    "papermill": {
     "duration": 0.013818,
     "end_time": "2024-07-05T10:20:54.361896",
     "exception": false,
     "start_time": "2024-07-05T10:20:54.348078",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "none",
   "dataSources": [],
   "dockerImageVersionId": 30732,
   "isGpuEnabled": false,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 11.084202,
   "end_time": "2024-07-05T10:20:54.996061",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-07-05T10:20:43.911859",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
